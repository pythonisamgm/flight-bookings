name: Docker

on:
  push:
    branches:
      - testingDev
      - dev
      - main
  pull_request:
    branches:
      - testingDev
      - dev
      - main

jobs:
  build-and-initialize:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up MySQL in Docker using mirromutth/mysql-action
      - name: Set up MySQL with Docker
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql database: 'db_flight-bookings'
          mysql root password: ''
          mysql user: 'root'
          mysql password: ''

      # 3. Wait for MySQL to be ready
      - name: Wait for MySQL to be ready
        run: |
          max_attempts=5
          attempt_num=1
          until mysql -h 127.0.0.1 -P 3306 -u root -e "SHOW DATABASES;" || [ $attempt_num -eq $max_attempts ]; do
            echo "Attempt $attempt_num/$max_attempts: Waiting for MySQL..."
            attempt_num=$((attempt_num+1))
            sleep 5
          done

          if [ $attempt_num -gt $max_attempts ]; then
            echo "MySQL is not ready after $max_attempts attempts. Exiting."
            exit 1
          fi

      # 4. Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 5. Create application-test.properties
      - name: Create application-test.properties
        run: |
          echo "spring.datasource.url=jdbc:mysql://localhost:3306/flight_bookings_test" > src/main/resources/application-test.properties
          echo "spring.datasource.username=testuser" >> src/main/resources/application-test.properties
          echo "spring.datasource.password=" >> src/main/resources/application-test.properties
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> src/main/resources/application-test.properties
          echo "spring.jpa.hibernate.ddl-auto=create-drop" >> src/main/resources/application-test.properties
          echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect" >> src/main/resources/application-test.properties

      # 6. Build API with Maven
      - name: Build API
        run: mvn clean install

      # 7. Run unit tests
      - name: Run Unit Tests
        run: mvn test

      # 8. Run integration tests
      - name: Run Integration Tests
        run: mvn verify

  # Step to handle database migrations using the migration action
  migrate-database:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Database Migrations
        uses: guibranco/github-mysql-migration-action@latest
        env:
          MYSQL_PWD: ''
        with:
          OPERATION: migrate
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: root
          MYSQL_DATABASE: flight_bookings_test
